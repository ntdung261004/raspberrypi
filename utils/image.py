# utils/images.py

import os
import cv2
from datetime import datetime

def save_debug_images(original_frame, yolo_crop, warped_result=None):
    """
    L∆∞u m·ªôt b·ªô ·∫£nh debug v√†o m·ªôt th∆∞ m·ª•c con ƒë∆∞·ª£c ƒë·∫∑t t√™n theo timestamp.
    (H√†m n√†y v·∫´n ƒë∆∞·ª£c gi·ªØ l·∫°i)
    """
    try:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S_%f")
        output_dir = os.path.join("debug_images", timestamp)
        os.makedirs(output_dir, exist_ok=True)

        cv2.imwrite(os.path.join(output_dir, "1_frame_goc.jpg"), original_frame)
        cv2.imwrite(os.path.join(output_dir, "2_yolo_crop.jpg"), yolo_crop)
        
        if warped_result is not None:
            cv2.imwrite(os.path.join(output_dir, "3_warped_result.jpg"), warped_result)
        
        print(f"‚úÖ ƒê√£ l∆∞u ·∫£nh debug v√†o th∆∞ m·ª•c: {output_dir}")
        return output_dir
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi l∆∞u ·∫£nh debug: {e}")
        return None

# <<< TH√äM M·ªöI: H√†m ƒë·ªÉ l∆∞u ·∫£nh cho vi·ªác training >>>
def save_training_image(frame):
    """
    L∆∞u m·ªôt khung h√¨nh g·ªëc v√†o th∆∞ m·ª•c data_image v·ªõi t√™n file duy nh·∫•t.
    """
    output_dir = "data_image"
    try:
        # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
        os.makedirs(output_dir, exist_ok=True)
        
        # T·∫°o t√™n file duy nh·∫•t b·∫±ng timestamp
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S_%f")
        filename = f"{timestamp}.jpg"
        file_path = os.path.join(output_dir, filename)
        
        # L∆∞u ·∫£nh
        cv2.imwrite(file_path, frame)
        print(f"üñºÔ∏è  ƒê√£ l∆∞u ·∫£nh training: {file_path}")
        return file_path
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi l∆∞u ·∫£nh training: {e}")
        return None